'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/openconfig-network-instance-type.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title openconfig-network-instance-type 
package "oc-ext:openconfig-extensions" as oc_ext_openconfig_extensions { 
} 
note top of oc_ni_types_openconfig_network_instance_types : <b>Namespace: </b> http://openconfig.net/yang/network-instance-types \n<b>Prefix: </b> oc-ni-types \n<b>Organization : </b>\nOpenConfig working group \n<b>Contact : </b>\nOpenConfig working group \nwww.openconfig.net \n<b>Revision : </b> 2016-12-15 \n
package "oc-ni-types:openconfig-network-instance-types" as oc_ni_types_openconfig_network_instance_types { 
oc_ext_openconfig_extensions +-- oc_ni_types_openconfig_network_instance_types
class "openconfig-network-instance-types" as openconfig_network_instance_types << (M, #33CCFF) module>> 
class "route-distinguisher" as route_distinguisher << (T, YellowGreen) typedef>>
route_distinguisher : union{string, string}
class "NETWORK_INSTANCE_TYPE" as NETWORK_INSTANCE_TYPE << (I,Silver) identity>> 
class "DEFAULT_INSTANCE" as DEFAULT_INSTANCE << (I,Silver) identity>> 
NETWORK_INSTANCE_TYPE <|-- DEFAULT_INSTANCE 
class "L3VRF" as L3VRF << (I,Silver) identity>> 
NETWORK_INSTANCE_TYPE <|-- L3VRF 
class "L2VSI" as L2VSI << (I,Silver) identity>> 
NETWORK_INSTANCE_TYPE <|-- L2VSI 
class "L2P2P" as L2P2P << (I,Silver) identity>> 
NETWORK_INSTANCE_TYPE <|-- L2P2P 
class "L2L3" as L2L3 << (I,Silver) identity>> 
NETWORK_INSTANCE_TYPE <|-- L2L3 
class "ENDPOINT_TYPE" as ENDPOINT_TYPE << (I,Silver) identity>> 
class "LOCAL" as LOCAL << (I,Silver) identity>> 
ENDPOINT_TYPE <|-- LOCAL 
class "REMOTE" as REMOTE << (I,Silver) identity>> 
ENDPOINT_TYPE <|-- REMOTE 
class "LABEL_ALLOCATION_MODE" as LABEL_ALLOCATION_MODE << (I,Silver) identity>> 
class "PER_PREFIX" as PER_PREFIX << (I,Silver) identity>> 
LABEL_ALLOCATION_MODE <|-- PER_PREFIX 
class "PER_NEXTHOP" as PER_NEXTHOP << (I,Silver) identity>> 
LABEL_ALLOCATION_MODE <|-- PER_NEXTHOP 
class "INSTANCE_LABEL" as INSTANCE_LABEL << (I,Silver) identity>> 
LABEL_ALLOCATION_MODE <|-- INSTANCE_LABEL 
class "ENCAPSULATION" as ENCAPSULATION << (I,Silver) identity>> 
class "MPLS" as MPLS << (I,Silver) identity>> 
ENCAPSULATION <|-- MPLS 
class "VXLAN" as VXLAN << (I,Silver) identity>> 
ENCAPSULATION <|-- VXLAN 
class "SIGNALLING_PROTOCOL" as SIGNALLING_PROTOCOL << (I,Silver) identity>> 
class "LDP" as LDP << (I,Silver) identity>> 
SIGNALLING_PROTOCOL <|-- LDP 
class "BGP_VPLS" as BGP_VPLS << (I,Silver) identity>> 
SIGNALLING_PROTOCOL <|-- BGP_VPLS 
class "BGP_EVPN" as BGP_EVPN << (I,Silver) identity>> 
SIGNALLING_PROTOCOL <|-- BGP_EVPN 
} 

center footer
 <size:20> UML Generated : 2019-02-21 00:45 </size>
 endfooter 
@enduml 
