'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/openconfig-packet-match.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title openconfig-packet-match 
package "oc-inet:openconfig-inet-types" as oc_inet_openconfig_inet_types { 
} 
package "oc-yang:openconfig-yang-types" as oc_yang_openconfig_yang_types { 
} 
package "oc-pkt-match-types:openconfig-packet-match-types" as oc_pkt_match_types_openconfig_packet_match_types { 
} 
package "oc-ext:openconfig-extensions" as oc_ext_openconfig_extensions { 
} 
note top of oc_pkt_match_openconfig_packet_match : <b>Namespace: </b> http://openconfig.net/yang/header-fields \n<b>Prefix: </b> oc-pkt-match \n<b>Organization : </b>\nOpenConfig working group \n<b>Contact : </b>\nOpenConfig working group \nwww.openconfig.net \n<b>Revision : </b> 2017-05-26 \n
package "oc-pkt-match:openconfig-packet-match" as oc_pkt_match_openconfig_packet_match { 
oc_inet_openconfig_inet_types +-- oc_pkt_match_openconfig_packet_match
oc_yang_openconfig_yang_types +-- oc_pkt_match_openconfig_packet_match
oc_pkt_match_types_openconfig_packet_match_types +-- oc_pkt_match_openconfig_packet_match
oc_ext_openconfig_extensions +-- oc_pkt_match_openconfig_packet_match
class "openconfig-packet-match" as openconfig_packet_match << (M, #33CCFF) module>> 
class "ethernet-header-config" as openconfig_packet_match_I_ethernet_header_config_grouping <<(G,Lime) grouping>> 
openconfig_packet_match_I_ethernet_header_config_grouping : source-mac : oc-yang:mac-address  
openconfig_packet_match_I_ethernet_header_config_grouping : source-mac-mask : oc-yang:mac-address  
openconfig_packet_match_I_ethernet_header_config_grouping : destination-mac : oc-yang:mac-address  
openconfig_packet_match_I_ethernet_header_config_grouping : destination-mac-mask : oc-yang:mac-address  
openconfig_packet_match_I_ethernet_header_config_grouping : ethertype : oc-pkt-match-types:ethertype-type  
class "ethernet-header-state" as openconfig_packet_match_I_ethernet_header_state_grouping <<(G,Lime) grouping>> 
class "ethernet-header-top" as openconfig_packet_match_I_ethernet_header_top_grouping <<(G,Lime) grouping>> 
class "l2" as  openconfig_packet_match_I_ethernet_header_top_I_l2 <<container>> 
openconfig_packet_match_I_ethernet_header_top_grouping *-- "1" openconfig_packet_match_I_ethernet_header_top_I_l2 
class "config" as  openconfig_packet_match_I_ethernet_header_top_I_l2_I_config <<container>> 
openconfig_packet_match_I_ethernet_header_top_I_l2 *-- "1" openconfig_packet_match_I_ethernet_header_top_I_l2_I_config 
openconfig_packet_match_I_ethernet_header_top_I_l2_I_config : ethernet-header-config {uses} 
class "state" as  openconfig_packet_match_I_ethernet_header_top_I_l2_I_state <<container>> 
openconfig_packet_match_I_ethernet_header_top_I_l2 *-- "1" openconfig_packet_match_I_ethernet_header_top_I_l2_I_state 
note bottom of openconfig_packet_match_I_ethernet_header_top_I_l2_I_state
<b>Config = </b>false
end note 
openconfig_packet_match_I_ethernet_header_top_I_l2_I_state : ethernet-header-config {uses} 
openconfig_packet_match_I_ethernet_header_top_I_l2_I_state : ethernet-header-state {uses} 
class "ip-protocol-fields-common-config" as openconfig_packet_match_I_ip_protocol_fields_common_config_grouping <<(G,Lime) grouping>> 
openconfig_packet_match_I_ip_protocol_fields_common_config_grouping : dscp : oc-inet:dscp  
openconfig_packet_match_I_ip_protocol_fields_common_config_grouping : protocol : oc-pkt-match-types:ip-protocol-type  
openconfig_packet_match_I_ip_protocol_fields_common_config_grouping : hop-limit : uint8 [0..255]  
class "ipv4-protocol-fields-config" as openconfig_packet_match_I_ipv4_protocol_fields_config_grouping <<(G,Lime) grouping>> 
openconfig_packet_match_I_ipv4_protocol_fields_config_grouping : source-address : oc-inet:ipv4-prefix  
openconfig_packet_match_I_ipv4_protocol_fields_config_grouping : destination-address : oc-inet:ipv4-prefix  
openconfig_packet_match_I_ipv4_protocol_fields_config_grouping : ip-protocol-fields-common-config {uses} 
class "ipv4-protocol-fields-state" as openconfig_packet_match_I_ipv4_protocol_fields_state_grouping <<(G,Lime) grouping>> 
class "ipv4-protocol-fields-top" as openconfig_packet_match_I_ipv4_protocol_fields_top_grouping <<(G,Lime) grouping>> 
class "ipv4" as  openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4 <<container>> 
openconfig_packet_match_I_ipv4_protocol_fields_top_grouping *-- "1" openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4 
class "config" as  openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_config <<container>> 
openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4 *-- "1" openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_config 
openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_config : ipv4-protocol-fields-config {uses} 
class "state" as  openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_state <<container>> 
openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4 *-- "1" openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_state 
note bottom of openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_state
<b>Config = </b>false
end note 
openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_state : ipv4-protocol-fields-config {uses} 
openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_state : ipv4-protocol-fields-state {uses} 
class "ipv6-protocol-fields-config" as openconfig_packet_match_I_ipv6_protocol_fields_config_grouping <<(G,Lime) grouping>> 
openconfig_packet_match_I_ipv6_protocol_fields_config_grouping : source-address : oc-inet:ipv6-prefix  
openconfig_packet_match_I_ipv6_protocol_fields_config_grouping : source-flow-label : oc-inet:ipv6-flow-label  
openconfig_packet_match_I_ipv6_protocol_fields_config_grouping : destination-address : oc-inet:ipv6-prefix  
openconfig_packet_match_I_ipv6_protocol_fields_config_grouping : destination-flow-label : oc-inet:ipv6-flow-label  
openconfig_packet_match_I_ipv6_protocol_fields_config_grouping : ip-protocol-fields-common-config {uses} 
class "ipv6-protocol-fields-state" as openconfig_packet_match_I_ipv6_protocol_fields_state_grouping <<(G,Lime) grouping>> 
class "ipv6-protocol-fields-top" as openconfig_packet_match_I_ipv6_protocol_fields_top_grouping <<(G,Lime) grouping>> 
class "ipv6" as  openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6 <<container>> 
openconfig_packet_match_I_ipv6_protocol_fields_top_grouping *-- "1" openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6 
class "config" as  openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_config <<container>> 
openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6 *-- "1" openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_config 
openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_config : ipv6-protocol-fields-config {uses} 
class "state" as  openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_state <<container>> 
openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6 *-- "1" openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_state 
note bottom of openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_state
<b>Config = </b>false
end note 
openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_state : ipv6-protocol-fields-config {uses} 
openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_state : ipv6-protocol-fields-state {uses} 
class "transport-fields-config" as openconfig_packet_match_I_transport_fields_config_grouping <<(G,Lime) grouping>> 
openconfig_packet_match_I_transport_fields_config_grouping : source-port : oc-pkt-match-types:port-num-range  
openconfig_packet_match_I_transport_fields_config_grouping : destination-port : oc-pkt-match-types:port-num-range  
openconfig_packet_match_I_transport_fields_config_grouping : tcp-flags []: identityref {oc-pkt-match-types:TCP_FLAGS} 
class "transport-fields-state" as openconfig_packet_match_I_transport_fields_state_grouping <<(G,Lime) grouping>> 
class "transport-fields-top" as openconfig_packet_match_I_transport_fields_top_grouping <<(G,Lime) grouping>> 
class "transport" as  openconfig_packet_match_I_transport_fields_top_I_transport <<container>> 
openconfig_packet_match_I_transport_fields_top_grouping *-- "1" openconfig_packet_match_I_transport_fields_top_I_transport 
class "config" as  openconfig_packet_match_I_transport_fields_top_I_transport_I_config <<container>> 
openconfig_packet_match_I_transport_fields_top_I_transport *-- "1" openconfig_packet_match_I_transport_fields_top_I_transport_I_config 
openconfig_packet_match_I_transport_fields_top_I_transport_I_config : transport-fields-config {uses} 
class "state" as  openconfig_packet_match_I_transport_fields_top_I_transport_I_state <<container>> 
openconfig_packet_match_I_transport_fields_top_I_transport *-- "1" openconfig_packet_match_I_transport_fields_top_I_transport_I_state 
note bottom of openconfig_packet_match_I_transport_fields_top_I_transport_I_state
<b>Config = </b>false
end note 
openconfig_packet_match_I_transport_fields_top_I_transport_I_state : transport-fields-config {uses} 
openconfig_packet_match_I_transport_fields_top_I_transport_I_state : transport-fields-state {uses} 
openconfig_packet_match_I_transport_fields_config_grouping-->oc_pkt_match_types_TCP_FLAGS: tcp-flags
} 

openconfig_packet_match_I_ethernet_header_top_I_l2_I_config --> openconfig_packet_match_I_ethernet_header_config_grouping : uses 
openconfig_packet_match_I_ethernet_header_top_I_l2_I_state --> openconfig_packet_match_I_ethernet_header_config_grouping : uses 
openconfig_packet_match_I_ethernet_header_top_I_l2_I_state --> openconfig_packet_match_I_ethernet_header_state_grouping : uses 
openconfig_packet_match_I_ipv4_protocol_fields_config_grouping --> openconfig_packet_match_I_ip_protocol_fields_common_config_grouping : uses 
openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_config --> openconfig_packet_match_I_ipv4_protocol_fields_config_grouping : uses 
openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_state --> openconfig_packet_match_I_ipv4_protocol_fields_config_grouping : uses 
openconfig_packet_match_I_ipv4_protocol_fields_top_I_ipv4_I_state --> openconfig_packet_match_I_ipv4_protocol_fields_state_grouping : uses 
openconfig_packet_match_I_ipv6_protocol_fields_config_grouping --> openconfig_packet_match_I_ip_protocol_fields_common_config_grouping : uses 
openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_config --> openconfig_packet_match_I_ipv6_protocol_fields_config_grouping : uses 
openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_state --> openconfig_packet_match_I_ipv6_protocol_fields_config_grouping : uses 
openconfig_packet_match_I_ipv6_protocol_fields_top_I_ipv6_I_state --> openconfig_packet_match_I_ipv6_protocol_fields_state_grouping : uses 
openconfig_packet_match_I_transport_fields_top_I_transport_I_config --> openconfig_packet_match_I_transport_fields_config_grouping : uses 
openconfig_packet_match_I_transport_fields_top_I_transport_I_state --> openconfig_packet_match_I_transport_fields_config_grouping : uses 
openconfig_packet_match_I_transport_fields_top_I_transport_I_state --> openconfig_packet_match_I_transport_fields_state_grouping : uses 
center footer
 <size:20> UML Generated : 2019-02-20 23:24 </size>
 endfooter 
@enduml 
