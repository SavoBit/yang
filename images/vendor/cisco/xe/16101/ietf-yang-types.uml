'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/ietf-yang-types.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title ietf-yang-types 
note top of yang_ietf_yang_types : <b>Namespace: </b> urn:ietf:params:xml:ns:yang:ietf-yang-types \n<b>Prefix: </b> yang \n<b>Organization : </b>\nIETF NETMOD (NETCONF Data Modeling Language) Working Group \n<b>Contact : </b>\nWG Web:   <http://tools.ietf.org/wg/netmod/> \nWG List:  <mailto:netmod@ietf.org> \n \nWG Chair: David Kessens \n          <mailto:david.kessens@nsn.com> \n \nWG Chair: Juergen Schoenwaelder \n          <mailto:j.schoenwaelder@jacobs-university.de> \n \nEditor:   Juergen Schoenwaelder \n          <mailto:j.schoenwaelder@jacobs-university.de> \n<b>Revision : </b> 2013-07-15 \n
package "yang:ietf-yang-types" as yang_ietf_yang_types { 
class "ietf-yang-types" as ietf_yang_types << (M, #33CCFF) module>> 
class "counter32" as counter32 << (T, YellowGreen) typedef>>
counter32 : uint32
class "zero-based-counter32" as zero_based_counter32 << (T, YellowGreen) typedef>>
zero_based_counter32 : yang:counter32
class "counter64" as counter64 << (T, YellowGreen) typedef>>
counter64 : uint64
class "zero-based-counter64" as zero_based_counter64 << (T, YellowGreen) typedef>>
zero_based_counter64 : yang:counter64
class "gauge32" as gauge32 << (T, YellowGreen) typedef>>
gauge32 : uint32
class "gauge64" as gauge64 << (T, YellowGreen) typedef>>
gauge64 : uint64
class "object-identifier" as object_identifier << (T, YellowGreen) typedef>>
object_identifier : string {pattern = (([0-1](\.[1-3]?[0-9...}
class "object-identifier-128" as object_identifier_128 << (T, YellowGreen) typedef>>
object_identifier_128 : object-identifier {pattern = \d*(\.\d*){1,127}}
class "yang-identifier" as yang_identifier << (T, YellowGreen) typedef>>
yang_identifier : string {length = 1..max} {pattern = [a-zA-Z_][a-zA-Z0-9\...}
class "date-and-time" as date_and_time << (T, YellowGreen) typedef>>
date_and_time : string {pattern = \d{4}-\d{2}-\d{2}T\d...}
class "timeticks" as timeticks << (T, YellowGreen) typedef>>
timeticks : uint32
class "timestamp" as timestamp << (T, YellowGreen) typedef>>
timestamp : yang:timeticks
class "phys-address" as phys_address << (T, YellowGreen) typedef>>
phys_address : string {pattern = ([0-9a-fA-F]{2}(:[0-...}
class "mac-address" as mac_address << (T, YellowGreen) typedef>>
mac_address : string {pattern = [0-9a-fA-F]{2}(:[0-9...}
class "xpath1.0" as xpath1.0 << (T, YellowGreen) typedef>>
xpath1.0 : string
class "hex-string" as hex_string << (T, YellowGreen) typedef>>
hex_string : string {pattern = ([0-9a-fA-F]{2}(:[0-...}
class "uuid" as uuid << (T, YellowGreen) typedef>>
uuid : string {pattern = [0-9a-fA-F]{8}-[0-9a...}
class "dotted-quad" as dotted_quad << (T, YellowGreen) typedef>>
dotted_quad : string {pattern = (([0-9]|[1-9][0-9]|1...}
} 

center footer
 <size:20> UML Generated : 2019-02-20 23:57 </size>
 endfooter 
@enduml 
