'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/ietf-inet-types.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title ietf-inet-types 
note top of inet_ietf_inet_types : <b>Namespace: </b> urn:ietf:params:xml:ns:yang:ietf-inet-types \n<b>Prefix: </b> inet \n<b>Organization : </b>\nIETF NETMOD (NETCONF Data Modeling Language) Working Group \n<b>Contact : </b>\nWG Web:   <http://tools.ietf.org/wg/netmod/> \nWG List:  <mailto:netmod@ietf.org> \n \nWG Chair: David Kessens \n          <mailto:david.kessens@nsn.com> \n \nWG Chair: Juergen Schoenwaelder \n          <mailto:j.schoenwaelder@jacobs-university.de> \n \nEditor:   Juergen Schoenwaelder \n          <mailto:j.schoenwaelder@jacobs-university.de> \n<b>Revision : </b> 2013-07-15 \n
package "inet:ietf-inet-types" as inet_ietf_inet_types { 
class "ietf-inet-types" as ietf_inet_types << (M, #33CCFF) module>> 
enum "ip-version" as ietf_inet_types_I_ip_version {
unknown
ipv4
ipv6
}
class "dscp" as dscp << (T, YellowGreen) typedef>>
dscp : uint8 [0..63]
class "ipv6-flow-label" as ipv6_flow_label << (T, YellowGreen) typedef>>
ipv6_flow_label : uint32 [0..1048575]
class "port-number" as port_number << (T, YellowGreen) typedef>>
port_number : uint16 [0..65535]
class "as-number" as as_number << (T, YellowGreen) typedef>>
as_number : uint32
class "ip-address" as ip_address << (T, YellowGreen) typedef>>
ip_address : union{inet:ipv4-address, inet:ipv6-address}
class "ipv4-address" as ipv4_address << (T, YellowGreen) typedef>>
ipv4_address : string {pattern = (([0-9]|[1-9][0-9]|1...}
class "ipv6-address" as ipv6_address << (T, YellowGreen) typedef>>
ipv6_address : string {pattern = ((:|[0-9a-fA-F]{0,4}...}
class "ip-address-no-zone" as ip_address_no_zone << (T, YellowGreen) typedef>>
ip_address_no_zone : union{inet:ipv4-address-no-zone, inet:ipv6-address-no-zone}
class "ipv4-address-no-zone" as ipv4_address_no_zone << (T, YellowGreen) typedef>>
ipv4_address_no_zone : inet:ipv4-address {pattern = [0-9\.]*}
class "ipv6-address-no-zone" as ipv6_address_no_zone << (T, YellowGreen) typedef>>
ipv6_address_no_zone : inet:ipv6-address {pattern = [0-9a-fA-F:\.]*}
class "ip-prefix" as ip_prefix << (T, YellowGreen) typedef>>
ip_prefix : union{inet:ipv4-prefix, inet:ipv6-prefix}
class "ipv4-prefix" as ipv4_prefix << (T, YellowGreen) typedef>>
ipv4_prefix : string {pattern = (([0-9]|[1-9][0-9]|1...}
class "ipv6-prefix" as ipv6_prefix << (T, YellowGreen) typedef>>
ipv6_prefix : string {pattern = ((:|[0-9a-fA-F]{0,4}...}
class "domain-name" as domain_name << (T, YellowGreen) typedef>>
domain_name : string {length = 1..253} {pattern = ((([a-zA-Z0-9_]([a-z...}
class "host" as host << (T, YellowGreen) typedef>>
host : union{inet:ip-address, inet:domain-name}
class "uri" as uri << (T, YellowGreen) typedef>>
uri : string
} 

center footer
 <size:20> UML Generated : 2019-02-20 23:30 </size>
 endfooter 
@enduml 
