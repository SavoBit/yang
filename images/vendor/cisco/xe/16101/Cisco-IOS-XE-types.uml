'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/Cisco-IOS-XE-types.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title Cisco-IOS-XE-types 
package "inet:ietf-inet-types" as inet_ietf_inet_types { 
} 
note top of ios_types_Cisco_IOS_XE_types : <b>Namespace: </b> http://cisco.com/ns/yang/Cisco-IOS-XE-types \n<b>Prefix: </b> ios-types \n<b>Organization : </b>\nCisco Systems, Inc. \n<b>Contact : </b>\nCisco Systems, Inc. \nCustomer Service \n \nPostal: 170 W Tasman Drive \nSan Jose, CA 95134 \n \nTel: +1 1800 553-NETS \n \nE-mail: cs-yang@cisco.com \n<b>Revision : </b> 2018-06-24 \n
package "ios-types:Cisco-IOS-XE-types" as ios_types_Cisco_IOS_XE_types { 
inet_ietf_inet_types +-- ios_types_Cisco_IOS_XE_types
class "Cisco-IOS-XE-types" as Cisco_IOS_XE_types << (M, #33CCFF) module>> 
class "access-list-type" as access_list_type << (T, YellowGreen) typedef>>
access_list_type : union{uint16, uint16}
class "access-list-standard-id-type" as access_list_standard_id_type << (T, YellowGreen) typedef>>
access_list_standard_id_type : union{default-access-list-standard-id-type, string}
enum "access-list-in-out-type" as Cisco_IOS_XE_types_I_access_list_in_out_type {
in
out
}
class "acl-udp-port-type" as acl_udp_port_type << (T, YellowGreen) typedef>>
acl_udp_port_type : union{uint16, enumeration}
class "acl-tcp-port-type" as acl_tcp_port_type << (T, YellowGreen) typedef>>
acl_tcp_port_type : union{uint16, enumeration}
class "acl-tcp-udp-port-type" as acl_tcp_udp_port_type << (T, YellowGreen) typedef>>
acl_tcp_udp_port_type : union{uint16, enumeration}
class "default-access-list-standard-id-type" as default_access_list_standard_id_type << (T, YellowGreen) typedef>>
default_access_list_standard_id_type : union{uint8, uint16}
enum "redist-ospf-external-type" as Cisco_IOS_XE_types_I_redist_ospf_external_type {
1
2
}
class "bgp-as-number-type" as bgp_as_number_type << (T, YellowGreen) typedef>>
bgp_as_number_type : union{uint32, string}
class "cos_value-type" as cos_value_type << (T, YellowGreen) typedef>>
cos_value_type : union{uint8, enumeration}
class "dscp-type" as dscp_type << (T, YellowGreen) typedef>>
dscp_type : union{uint8, enumeration}
class "exp-acl-type" as exp_acl_type << (T, YellowGreen) typedef>>
exp_acl_type : union{uint16, string}
class "exp_value-type" as exp_value_type << (T, YellowGreen) typedef>>
exp_value_type : union{uint8, enumeration}
class "ext-acl-type" as ext_acl_type << (T, YellowGreen) typedef>>
ext_acl_type : union{uint16, uint16}
class "hhmm-type" as hhmm_type << (T, YellowGreen) typedef>>
hhmm_type : string {pattern = ([0-1]?[0-9]|2[0-4])...}
class "hhmmss-type" as hhmmss_type << (T, YellowGreen) typedef>>
hhmmss_type : string {pattern = ([0-1]?[0-9]|2[0-4])...}
class "asn-ip-type" as asn_ip_type << (T, YellowGreen) typedef>>
asn_ip_type : string {pattern = (([0-9]+\.[0-9]+)|([...}
class "host-type" as host_type << (T, YellowGreen) typedef>>
host_type : union{inet:ip-address, inet:domain-name}
enum "interface-type" as Cisco_IOS_XE_types_I_interface_type {
BDI
FastEthernet
GigabitEthernet
MORE
}
class "interface-name" as interface_name << (T, YellowGreen) typedef>>
interface_name : union{uint16, uint32}
class "ip-host" as ip_host << (T, YellowGreen) typedef>>
ip_host : union{inet:ip-address, inet:domain-name}
class "ipv4-host" as ipv4_host << (T, YellowGreen) typedef>>
ipv4_host : union{inet:ipv4-address, inet:domain-name}
class "ipv6-host" as ipv6_host << (T, YellowGreen) typedef>>
ipv6_host : union{inet:ipv6-address, inet:domain-name}
class "mobility-type" as mobility_type << (T, YellowGreen) typedef>>
mobility_type : union{uint8, enumeration}
class "prec_value-type" as prec_value_type << (T, YellowGreen) typedef>>
prec_value_type : union{uint8, enumeration}
class "precedence-type" as precedence_type << (T, YellowGreen) typedef>>
precedence_type : union{uint8, enumeration}
class "std-acl-type" as std_acl_type << (T, YellowGreen) typedef>>
std_acl_type : union{uint16, uint16}
class "percentage" as percentage << (T, YellowGreen) typedef>>
percentage : uint8 [0..100]
class "limit-dc-non-dc-type" as limit_dc_non_dc_type << (T, YellowGreen) typedef>>
limit_dc_non_dc_type : union{uint32, enumeration}
class "ospf-area-type" as ospf_area_type << (T, YellowGreen) typedef>>
ospf_area_type : union{uint32, inet:ipv4-address}
class "ospf-metric-type" as ospf_metric_type << (T, YellowGreen) typedef>>
ospf_metric_type : uint32 [1 .. 2]
class "qos_value-type" as qos_value_type << (T, YellowGreen) typedef>>
qos_value_type : union{uint8, enumeration}
enum "weekday-type" as Cisco_IOS_XE_types_I_weekday_type {
Mon
Tue
Wed
MORE
}
class "bgp-distribute-list-type" as bgp_distribute_list_type << (T, YellowGreen) typedef>>
bgp_distribute_list_type : union{uint16, uint16}
class "bgp-distribute-list-type2" as bgp_distribute_list_type2 << (T, YellowGreen) typedef>>
bgp_distribute_list_type2 : union{uint16, uint16}
enum "bgp_ipv4_af_type" as Cisco_IOS_XE_types_I_bgp_ipv4_af_type {
unicast
multicast
mdt
MORE
}
enum "bgp_ipv6_af_type" as Cisco_IOS_XE_types_I_bgp_ipv6_af_type {
unicast
multicast
mdt
MORE
}
class "storm-control-threshold-type" as storm_control_threshold_type << (T, YellowGreen) typedef>>
storm_control_threshold_type : string {pattern = [0-9]+.?[0-9]*[k|m|g...}
class "community-number-type" as community_number_type << (T, YellowGreen) typedef>>
community_number_type : union{uint32, string}
enum "community-well-known-type" as Cisco_IOS_XE_types_I_community_well_known_type {
gshut
internet
local-AS
MORE
}
enum "community-well-known-add-type" as Cisco_IOS_XE_types_I_community_well_known_add_type {
gshut
internet
local-AS
MORE
}
class "cisco-mac-address-type" as cisco_mac_address_type << (T, YellowGreen) typedef>>
cisco_mac_address_type : string {pattern = [0-9a-fA-F]+\.[0-9a-...}
enum "month-type" as Cisco_IOS_XE_types_I_month_type {
Jan
Feb
Mar
MORE
}
class "ipv6-prefix" as ipv6_prefix << (T, YellowGreen) typedef>>
ipv6_prefix : string {pattern = ((:|[0-9a-fA-F]{0,4}...}
class "cisco-route-distinguisher" as cisco_route_distinguisher << (T, YellowGreen) typedef>>
cisco_route_distinguisher : union{string, string}
class "range-string" as range_string << (T, YellowGreen) typedef>>
range_string : string {pattern = ((\d+(-\d+)?)(,(\d+(...}
class "ipv4-address-slash-prefix-len" as ipv4_address_slash_prefix_len << (T, YellowGreen) typedef>>
ipv4_address_slash_prefix_len : string {pattern = (([0-9]|[1-9][0-9]|1...}
} 

center footer
 <size:20> UML Generated : 2019-02-21 00:33 </size>
 endfooter 
@enduml 
