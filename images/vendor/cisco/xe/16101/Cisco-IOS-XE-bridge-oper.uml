'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/Cisco-IOS-XE-bridge-oper.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title Cisco-IOS-XE-bridge-oper 
package "yang:ietf-yang-types" as yang_ietf_yang_types { 
} 
note top of bridge_ios_xe_oper_Cisco_IOS_XE_bridge_oper : <b>Namespace: </b> http://cisco.com/ns/yang/Cisco-IOS-XE-bridge-oper \n<b>Prefix: </b> bridge-ios-xe-oper \n<b>Organization : </b>\nCisco Systems, Inc. \n<b>Contact : </b>\nCisco Systems, Inc. \nCustomer Service \n \nPostal: 170 W Tasman Drive \nSan Jose, CA 95134 \n \nTel: +1 1800 553-NETS \n \nE-mail: cs-yang@cisco.com \n<b>Revision : </b> 2018-03-10 \n
package "bridge-ios-xe-oper:Cisco-IOS-XE-bridge-oper" as bridge_ios_xe_oper_Cisco_IOS_XE_bridge_oper { 
yang_ietf_yang_types +-- bridge_ios_xe_oper_Cisco_IOS_XE_bridge_oper
class "Cisco-IOS-XE-bridge-oper" as Cisco_IOS_XE_bridge_oper << (M, #33CCFF) module>> 
enum "intf-status-type" as Cisco_IOS_XE_bridge_oper_I_intf_status_type {
up
down
}
enum "bridge-mac-type" as Cisco_IOS_XE_bridge_oper_I_bridge_mac_type {
bridge-mac-type-static
bridge-mac-type-dynamic
}
class "bridge-intf-entry" as Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping <<(G,Lime) grouping>> 
Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping : if-name : string  
Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping : vlan : uint32  
Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping : native-vlan : boolean  
Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping : admin-status : bridge-ios-xe-oper:intf-status-type  
Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping : oper-status : bridge-ios-xe-oper:intf-status-type  
Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping : encap-type : string  
Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping : ifindex : uint32  
Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping : mtu : uint32  
class "bridge-matm-entry" as Cisco_IOS_XE_bridge_oper_I_bridge_matm_entry_grouping <<(G,Lime) grouping>> 
Cisco_IOS_XE_bridge_oper_I_bridge_matm_entry_grouping : mac-address : yang:mac-address  
Cisco_IOS_XE_bridge_oper_I_bridge_matm_entry_grouping : interface []: string 
Cisco_IOS_XE_bridge_oper_I_bridge_matm_entry_grouping : vlan : uint32  
Cisco_IOS_XE_bridge_oper_I_bridge_matm_entry_grouping : type : bridge-ios-xe-oper:bridge-mac-type  
class "bridge-entry" as Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping <<(G,Lime) grouping>> 
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : bridge-id : uint32  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : name : string  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : vlan : uint32  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : routing-interface : string  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : max-macs : uint32  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : num-macs : uint32  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : age-time : uint32  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : rx-packets : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : rx-octets : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : tx-packets : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : tx-octets : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : flood-packets : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : flood-octets : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : rx-routed-packets : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : tx-routed-packets : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : learn : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : age : uint64  
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : move : uint64  
class "bridge-intf-entries" as  Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_intf_entries <<container>> 
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping *-- "1" Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_intf_entries 
class "bridge-intf-entry" as Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_intf_entries_I_bridge_intf_entry << (L, #FF7700) list>> 
Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_intf_entries *-- "0..N" Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_intf_entries_I_bridge_intf_entry 
Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_intf_entries_I_bridge_intf_entry : bridge-ios-xe-oper:bridge-intf-entry {uses} 
class "bridge-matm-entries" as  Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_matm_entries <<container>> 
Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping *-- "1" Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_matm_entries 
class "bridge-matm-entry" as Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_matm_entries_I_bridge_matm_entry << (L, #FF7700) list>> 
Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_matm_entries *-- "0..N" Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_matm_entries_I_bridge_matm_entry 
Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_matm_entries_I_bridge_matm_entry : bridge-ios-xe-oper:bridge-matm-entry {uses} 
class "bridge-instances" as  Cisco_IOS_XE_bridge_oper_I_bridge_instances <<container>> 
Cisco_IOS_XE_bridge_oper *-- "1" Cisco_IOS_XE_bridge_oper_I_bridge_instances 
note bottom of Cisco_IOS_XE_bridge_oper_I_bridge_instances
<b>Config = </b>false
end note 
class "bridge-entry" as Cisco_IOS_XE_bridge_oper_I_bridge_instances_I_bridge_entry << (L, #FF7700) list>> 
Cisco_IOS_XE_bridge_oper_I_bridge_instances *-- "0..N" Cisco_IOS_XE_bridge_oper_I_bridge_instances_I_bridge_entry 
Cisco_IOS_XE_bridge_oper_I_bridge_instances_I_bridge_entry : bridge-ios-xe-oper:bridge-entry {uses} 
} 

Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_intf_entries_I_bridge_intf_entry --> Cisco_IOS_XE_bridge_oper_I_bridge_intf_entry_grouping : uses 
Cisco_IOS_XE_bridge_oper_I_bridge_entry_I_bridge_matm_entries_I_bridge_matm_entry --> Cisco_IOS_XE_bridge_oper_I_bridge_matm_entry_grouping : uses 
Cisco_IOS_XE_bridge_oper_I_bridge_instances_I_bridge_entry --> Cisco_IOS_XE_bridge_oper_I_bridge_entry_grouping : uses 
center footer
 <size:20> UML Generated : 2019-02-21 00:08 </size>
 endfooter 
@enduml 
