'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/cisco-policy-filters.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title cisco-policy-filters 
package "classifier:ietf-diffserv-classifier" as classifier_ietf_diffserv_classifier { 
} 
package "policy-attr:policy-attr" as policy_attr_policy_attr { 
} 
package "policy-types:policy-types" as policy_types_policy_types { 
} 
note top of cisco_filter_cisco_policy_filters : <b>Namespace: </b> urn:ietf:params:xml:ns:yang:cisco-policy-filters \n<b>Prefix: </b> cisco-filter \n<b>Organization : </b>\nCisco Systems, Inc. \n<b>Contact : </b>\nCisco Systems, Inc. \nCustomer Service \n \nPostal: 170 W Tasman Drive \nSan Jose, CA 95134 \n \nTel: +1 1800 553-NETS \n \nE-mail: cs-yang@cisco.com \n \nEditor:   Nazanin Magharei \n          <mailto:nmaghare@cisco.com> \n<b>Revision : </b> 2016-03-30 \n
package "cisco-filter:cisco-policy-filters" as cisco_filter_cisco_policy_filters { 
classifier_ietf_diffserv_classifier +-- cisco_filter_cisco_policy_filters
policy_attr_policy_attr +-- cisco_filter_cisco_policy_filters
policy_types_policy_types +-- cisco_filter_cisco_policy_filters
class "cisco-policy-filters" as cisco_policy_filters << (M, #33CCFF) module>> 
class "/classifier:classifiers/classifier:classifier-entry" as classifier_classifiers_classifier_classifier_entry << (A,CadetBlue) augment>>
cisco_policy_filters *--  classifier_classifiers_classifier_classifier_entry 
classifier_classifiers_classifier_classifier_entry : classifier-entry-type : identityref {policy-types:class-type}  
class "/classifier:classifiers/classifier:classifier-entry/classifier:filter-entry/classifier:filter-param" as classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param << (A,CadetBlue) augment>>
cisco_policy_filters *--  classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param 
class "cos" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_case
<b>if-feature: </b>policy-types:match-cos-support
end note 
class "cos-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_I_cos_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_I_cos_cfgs 
class "cos-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_I_cos_cfgs_I_cos_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_I_cos_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_I_cos_cfgs_I_cos_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_I_cos_cfgs_I_cos_cfg
<b>Must:</b>
cos-min <= cos-max
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_I_cos_cfgs_I_cos_cfg : policy-attr:cos-cfg {uses} 
class "cos-inner-filter" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_case
<b>if-feature: </b>policy-types:match-cos-inner-support
end note 
class "cos-inner-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_I_cos_inner_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_I_cos_inner_cfgs 
class "cos-inner-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_I_cos_inner_cfgs_I_cos_inner_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_I_cos_inner_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_I_cos_inner_cfgs_I_cos_inner_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_I_cos_inner_cfgs_I_cos_inner_cfg
<b>Must:</b>
cos-min <= cos-min
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_cos_inner_filter_I_cos_inner_cfgs_I_cos_inner_cfg : policy-attr:cos-cfg {uses} 
class "ipv4-acl-name-filter" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_case
<b>if-feature: </b>policy-types:match-ipv4-acl-name-support
end note 
class "ipv4-acl-name-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_I_ipv4_acl_name_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_I_ipv4_acl_name_cfgs 
class "ipv4-acl-name-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_I_ipv4_acl_name_cfgs_I_ipv4_acl_name_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_I_ipv4_acl_name_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_I_ipv4_acl_name_cfgs_I_ipv4_acl_name_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_name_filter_I_ipv4_acl_name_cfgs_I_ipv4_acl_name_cfg : policy-attr:ip-acl-name-cfg {uses} 
class "ipv6-acl-name-filter" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_case
<b>if-feature: </b>policy-types:match-ipv6-acl-name-support
end note 
class "ipv6-acl-name-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_I_ipv6_acl_name_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_I_ipv6_acl_name_cfgs 
class "ipv6-acl-name-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_I_ipv6_acl_name_cfgs_I_ipv6_acl_name_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_I_ipv6_acl_name_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_I_ipv6_acl_name_cfgs_I_ipv6_acl_name_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_name_filter_I_ipv6_acl_name_cfgs_I_ipv6_acl_name_cfg : policy-attr:ip-acl-name-cfg {uses} 
class "ipv4-acl-filter" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_case
<b>if-feature: </b>policy-types:match-ipv4-acl-support
end note 
class "ipv4-acl-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_I_ipv4_acl_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_I_ipv4_acl_cfgs 
class "ipv4-acl-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_I_ipv4_acl_cfgs_I_ipv4_acl_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_I_ipv4_acl_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_I_ipv4_acl_cfgs_I_ipv4_acl_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv4_acl_filter_I_ipv4_acl_cfgs_I_ipv4_acl_cfg : policy-attr:ip-acl-cfg {uses} 
class "ipv6-acl-filter" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_case
<b>if-feature: </b>policy-types:match-ipv6-acl-support
end note 
class "ipv6-acl-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_I_ipv6_acl_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_I_ipv6_acl_cfgs 
class "ipv6-acl-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_I_ipv6_acl_cfgs_I_ipv6_acl_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_I_ipv6_acl_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_I_ipv6_acl_cfgs_I_ipv6_acl_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ipv6_acl_filter_I_ipv6_acl_cfgs_I_ipv6_acl_cfg : policy-attr:ip-acl-cfg {uses} 
class "input-interface" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_case
<b>if-feature: </b>policy-types:match-input-interface-support
end note 
class "input-interface-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_I_input_interface_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_I_input_interface_cfgs 
class "input-interface-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_I_input_interface_cfgs_I_input_interface_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_I_input_interface_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_I_input_interface_cfgs_I_input_interface_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_input_interface_I_input_interface_cfgs_I_input_interface_cfg : policy-attr:input-interface-cfg {uses} 
class "src-mac" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_case
<b>if-feature: </b>policy-types:match-src-mac-support
end note 
class "src-mac-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_I_src_mac_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_I_src_mac_cfgs 
class "src-mac-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_I_src_mac_cfgs_I_src_mac_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_I_src_mac_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_I_src_mac_cfgs_I_src_mac_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_src_mac_I_src_mac_cfgs_I_src_mac_cfg : policy-attr:mac-cfg {uses} 
class "dst-mac" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_case
<b>if-feature: </b>policy-types:match-dst-mac-support
end note 
class "dst-mac-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_I_dst_mac_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_I_dst_mac_cfgs 
class "dst-mac-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_I_dst_mac_cfgs_I_dst_mac_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_I_dst_mac_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_I_dst_mac_cfgs_I_dst_mac_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dst_mac_I_dst_mac_cfgs_I_dst_mac_cfg : policy-attr:mac-cfg {uses} 
class "protocol-name" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_case
<b>if-feature: </b>policy-types:protocol-name-support
end note 
class "protocol-name-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_I_protocol_name_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_I_protocol_name_cfgs 
class "protocol-name-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_I_protocol_name_cfgs_I_protocol_name_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_I_protocol_name_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_I_protocol_name_cfgs_I_protocol_name_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_protocol_name_I_protocol_name_cfgs_I_protocol_name_cfg : policy-attr:protocol-name-cfg {uses} 
class "mpls-exp-top" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_case
<b>if-feature: </b>policy-types:match-mpls-exp-top-support
end note 
class "mpls-exp-top-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_I_mpls_exp_top_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_I_mpls_exp_top_cfgs 
class "mpls-exp-top-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_I_mpls_exp_top_cfgs_I_mpls_exp_top_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_I_mpls_exp_top_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_I_mpls_exp_top_cfgs_I_mpls_exp_top_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_I_mpls_exp_top_cfgs_I_mpls_exp_top_cfg
<b>Must:</b>
exp-min <= exp-max
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_top_I_mpls_exp_top_cfgs_I_mpls_exp_top_cfg : policy-attr:mpls-exp-cfg {uses} 
class "mpls-exp-imp" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_case
<b>if-feature: </b>policy-types:match-mpls-exp-imp-support
end note 
class "mpls-exp-imp-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_I_mpls_exp_imp_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_I_mpls_exp_imp_cfgs 
class "mpls-exp-imp-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_I_mpls_exp_imp_cfgs_I_mpls_exp_imp_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_I_mpls_exp_imp_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_I_mpls_exp_imp_cfgs_I_mpls_exp_imp_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_I_mpls_exp_imp_cfgs_I_mpls_exp_imp_cfg
<b>Must:</b>
exp-min <= exp-max
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_mpls_exp_imp_I_mpls_exp_imp_cfgs_I_mpls_exp_imp_cfg : policy-attr:mpls-exp-cfg {uses} 
class "packet-length" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_case
<b>if-feature: </b>policy-types:match-packet-length-support
end note 
class "pkt-len-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_I_pkt_len_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_I_pkt_len_cfgs 
class "pkt-len-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_I_pkt_len_cfgs_I_pkt_len_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_I_pkt_len_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_I_pkt_len_cfgs_I_pkt_len_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_I_pkt_len_cfgs_I_pkt_len_cfg
<b>Must:</b>
min-pkt-len <= max-pkt-len
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_packet_length_I_pkt_len_cfgs_I_pkt_len_cfg : policy-attr:pkt-len-cfg {uses} 
class "prec" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_case
<b>if-feature: </b>policy-types:match-prec-support
end note 
class "prec" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec 
class "prec-par" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par <<choice>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par : choice 
class "prec-value" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_value_case <<case>>
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_value_case  : choice prec-par
class "prec-val-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_value_I_prec_val_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_value_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_value_I_prec_val_cfgs 
class "prec-val-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_value_I_prec_val_cfgs_I_prec_val_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_value_I_prec_val_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_value_I_prec_val_cfgs_I_prec_val_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_value_I_prec_val_cfgs_I_prec_val_cfg : policy-attr:prec-val-cfg {uses} 
class "prec-attr" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_attr_case <<case>>
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_attr_case  : choice prec-par
class "prec-attr-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_attr_I_prec_attr_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_attr_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_attr_I_prec_attr_cfgs 
class "prec-attr-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_attr_I_prec_attr_cfgs_I_prec_attr_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_attr_I_prec_attr_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_attr_I_prec_attr_cfgs_I_prec_attr_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_prec_I_prec_I_prec_par_I_prec_attr_I_prec_attr_cfgs_I_prec_attr_cfg : policy-attr:prec-attr-cfg {uses} 
class "qos-group" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_case
<b>if-feature: </b>policy-types:match-qos-group-support
end note 
class "qos-group-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_I_qos_group_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_I_qos_group_cfgs 
class "qos-group-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_I_qos_group_cfgs_I_qos_group_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_I_qos_group_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_I_qos_group_cfgs_I_qos_group_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_I_qos_group_cfgs_I_qos_group_cfg
<b>Must:</b>
qos-group-min<qos-group-max
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_qos_group_I_qos_group_cfgs_I_qos_group_cfg : policy-attr:qos-group-cfg {uses} 
class "vlan" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_case
<b>if-feature: </b>policy-types:match-vlan-support
end note 
class "vlan-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_I_vlan_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_I_vlan_cfgs 
class "vlan-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_I_vlan_cfgs_I_vlan_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_I_vlan_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_I_vlan_cfgs_I_vlan_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_I_vlan_cfgs_I_vlan_cfg
<b>Must:</b>
vlan-min<=vlan-max
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_I_vlan_cfgs_I_vlan_cfg : policy-attr:vlan-cfg {uses} 
class "vlan-inner" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_case
<b>if-feature: </b>policy-types:match-vlan-inner-support
end note 
class "vlan-inner-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_I_vlan_inner_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_I_vlan_inner_cfgs 
class "vlan-inner-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_I_vlan_inner_cfgs_I_vlan_inner_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_I_vlan_inner_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_I_vlan_inner_cfgs_I_vlan_inner_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_I_vlan_inner_cfgs_I_vlan_inner_cfg
<b>Must:</b>
vlan-min<=vlan-max
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vlan_inner_I_vlan_inner_cfgs_I_vlan_inner_cfg : policy-attr:vlan-cfg {uses} 
class "atm-clp" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_clp_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_clp_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_clp_case
<b>if-feature: </b>policy-types:match-atm-clp-support
end note 
class "atm-clp-cfg" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_clp_I_atm_clp_cfg <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_clp_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_clp_I_atm_clp_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_clp_I_atm_clp_cfg : policy-attr:atm-clp-cfg {uses} 
class "atm-vci" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_case
<b>if-feature: </b>policy-types:match-atm-vci-support
end note 
class "atm-vci-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_I_atm_vci_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_I_atm_vci_cfgs 
class "atm-vci-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_I_atm_vci_cfgs_I_atm_vci_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_I_atm_vci_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_I_atm_vci_cfgs_I_atm_vci_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_I_atm_vci_cfgs_I_atm_vci_cfg
<b>Must:</b>
atm-vci-min<=atm-vci-max
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_atm_vci_I_atm_vci_cfgs_I_atm_vci_cfg : policy-attr:atm-vci-cfg {uses} 
class "dei" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_case
<b>if-feature: </b>policy-types:match-dei-support
end note 
class "dei-cfg" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_I_dei_cfg <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_I_dei_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_I_dei_cfg : policy-attr:dei-cfg {uses} 
class "dei-inner" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_inner_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_inner_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_inner_case
<b>if-feature: </b>policy-types:match-dei-inner-support
end note 
class "dei-inner-cfg" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_inner_I_dei_inner_cfg <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_inner_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_inner_I_dei_inner_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_dei_inner_I_dei_inner_cfg : policy-attr:dei-cfg {uses} 
class "flow-ip" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_ip_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_ip_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_ip_case
<b>if-feature: </b>policy-types:match-flow-ip-support
end note 
class "flow-ip-cfg" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_ip_I_flow_ip_cfg <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_ip_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_ip_I_flow_ip_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_ip_I_flow_ip_cfg : policy-attr:flow-cfg {uses} 
class "flow-record" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_record_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_record_case  : choice filter-param
class "flow-record-cfg" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_record_I_flow_record_cfg <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_record_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_record_I_flow_record_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_flow_record_I_flow_record_cfg : policy-attr:flow-record-cfg {uses} 
class "fr-de" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_de_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_de_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_de_case
<b>if-feature: </b>policy-types:match-fr-de-support
end note 
class "fr-de-cfg" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_de_I_fr_de_cfg <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_de_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_de_I_fr_de_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_de_I_fr_de_cfg : policy-attr:fr-de-cfg {uses} 
class "fr-dlci" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_case
<b>if-feature: </b>policy-types:match-fr-dlci-support
end note 
class "fr-dlci-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_I_fr_dlci_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_I_fr_dlci_cfgs 
class "fr-dlci-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_I_fr_dlci_cfgs_I_fr_dlci_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_I_fr_dlci_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_I_fr_dlci_cfgs_I_fr_dlci_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_I_fr_dlci_cfgs_I_fr_dlci_cfg
<b>Must:</b>
dlci-min<=dlci-max
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_fr_dlci_I_fr_dlci_cfgs_I_fr_dlci_cfg : policy-attr:fr-dlci-cfg {uses} 
class "wlan-user-priority" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_case
<b>if-feature: </b>policy-types:match-wlan-user-priority-support
end note 
class "wlan-user-priority-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_I_wlan_user_priority_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_I_wlan_user_priority_cfgs 
class "wlan-user-priority-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_I_wlan_user_priority_cfgs_I_wlan_user_priority_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_I_wlan_user_priority_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_I_wlan_user_priority_cfgs_I_wlan_user_priority_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_I_wlan_user_priority_cfgs_I_wlan_user_priority_cfg
<b>Must:</b>
wlan-prio-min<=wlan-prio-max
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_wlan_user_priority_I_wlan_user_priority_cfgs_I_wlan_user_priority_cfg : policy-attr:wlan-user-priority-cfg {uses} 
class "discard-class" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_case
<b>if-feature: </b>policy-types:match-discard-class-support
end note 
class "discard-class-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_I_discard_class_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_I_discard_class_cfgs 
class "discard-class-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_I_discard_class_cfgs_I_discard_class_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_I_discard_class_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_I_discard_class_cfgs_I_discard_class_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_discard_class_I_discard_class_cfgs_I_discard_class_cfg : policy-attr:discard-class-cfg {uses} 
class "class-map" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_case
<b>if-feature: </b>policy-types:match-class-map-support
end note 
class "class-map-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_I_class_map_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_I_class_map_cfgs 
class "class-map-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_I_class_map_cfgs_I_class_map_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_I_class_map_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_I_class_map_cfgs_I_class_map_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_class_map_I_class_map_cfgs_I_class_map_cfg : policy-attr:class-map-cfg {uses} 
class "metadata" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_metadata_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_metadata_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_metadata_case
<b>if-feature: </b>policy-types:match-metadata-support
end note 
class "metadata-cfg" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_metadata_I_metadata_cfg <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_metadata_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_metadata_I_metadata_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_metadata_I_metadata_cfg : policy-attr:metadata-cfg {uses} 
class "application" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_case
<b>if-feature: </b>policy-types:match-application-support
end note 
class "application-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_I_application_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_I_application_cfgs 
class "application-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_I_application_cfgs_I_application_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_I_application_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_I_application_cfgs_I_application_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_application_I_application_cfgs_I_application_cfg : policy-attr:application-cfg {uses} 
class "security-group" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_case
<b>if-feature: </b>policy-types:match-security-group-support
end note 
class "security-group" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group 
class "group-par" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par <<choice>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par : choice 
class "group-name" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_name_case <<case>>
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_name_case  : choice group-par
class "security-group-name-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_name_I_security_group_name_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_name_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_name_I_security_group_name_cfgs 
class "security-group-name-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_name_I_security_group_name_cfgs_I_security_group_name_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_name_I_security_group_name_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_name_I_security_group_name_cfgs_I_security_group_name_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_name_I_security_group_name_cfgs_I_security_group_name_cfg : policy-attr:security-group-name-cfg {uses} 
class "group-tag" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_tag_case <<case>>
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_tag_case  : choice group-par
class "security-group-tag-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_tag_I_security_group_tag_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_tag_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_tag_I_security_group_tag_cfgs 
class "security-group-tag-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_tag_I_security_group_tag_cfgs_I_security_group_tag_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_tag_I_security_group_tag_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_tag_I_security_group_tag_cfgs_I_security_group_tag_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_security_group_I_security_group_I_group_par_I_group_tag_I_security_group_tag_cfgs_I_security_group_tag_cfg : policy-attr:security-group-tag-cfg {uses} 
class "ip-rtp" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_case
<b>if-feature: </b>policy-types:match-ip-rtp-support
end note 
class "ip-rtp-cfgs" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_I_ip_rtp_cfgs <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_I_ip_rtp_cfgs 
class "ip-rtp-cfg" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_I_ip_rtp_cfgs_I_ip_rtp_cfg << (L, #FF7700) list>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_I_ip_rtp_cfgs *-- "0..N" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_I_ip_rtp_cfgs_I_ip_rtp_cfg 
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_I_ip_rtp_cfgs_I_ip_rtp_cfg
<b>Must:</b>
starting-port-number<=port-range
end note 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_ip_rtp_I_ip_rtp_cfgs_I_ip_rtp_cfg : policy-attr:ip-rtp-cfg {uses} 
class "vpls" as ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vpls_case <<case>>
classifier_classifiers_classifier_classifier_entry_classifier_filter_entry_classifier_filter_param .. ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vpls_case  : choice filter-param
note bottom of ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vpls_case
<b>if-feature: </b>policy-types:match-vpls-support
end note 
class "vpls-cfg" as  ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vpls_I_vpls_cfg <<container>> 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vpls_case *-- "1" ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vpls_I_vpls_cfg 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry_I_filter_entry_I_filter_param_I_vpls_I_vpls_cfg : policy-attr:vpls-cfg {uses} 
ietf_diffserv_classifier_I_classifiers_I_classifier_entry-->policy_types_class_type: classifier-entry-type
} 

center footer
 <size:20> UML Generated : 2019-02-20 23:37 </size>
 endfooter 
@enduml 
