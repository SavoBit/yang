'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/ietf-ip.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title ietf-ip 
package "if:ietf-interfaces" as if_ietf_interfaces { 
} 
package "inet:ietf-inet-types" as inet_ietf_inet_types { 
} 
package "yang:ietf-yang-types" as yang_ietf_yang_types { 
} 
note top of ip_ietf_ip : <b>Namespace: </b> urn:ietf:params:xml:ns:yang:ietf-ip \n<b>Prefix: </b> ip \n<b>Organization : </b>\nIETF NETMOD (NETCONF Data Modeling Language) Working Group \n<b>Contact : </b>\nWG Web:   <http://tools.ietf.org/wg/netmod/> \nWG List:  <mailto:netmod@ietf.org> \nWG Chair: Thomas Nadeau \n          <mailto:tnadeau@lucidvision.com> \nWG Chair: Juergen Schoenwaelder \n          <mailto:j.schoenwaelder@jacobs-university.de> \nEditor:   Martin Bjorklund \n          <mailto:mbj@tail-f.com> \n<b>Revision : </b> 2014-06-16 \n
package "ip:ietf-ip" as ip_ietf_ip { 
if_ietf_interfaces +-- ip_ietf_ip
inet_ietf_inet_types +-- ip_ietf_ip
yang_ietf_yang_types +-- ip_ietf_ip
class "ietf-ip" as ietf_ip << (M, #33CCFF) module>> 
ietf_ip : feature : ipv4_non_contiguous_netmasks 
ietf_ip : feature : ipv6_privacy_autoconf 
enum "ip-address-origin" as ietf_ip_I_ip_address_origin {
other
static
dhcp
MORE
}
enum "neighbor-origin" as ietf_ip_I_neighbor_origin {
other
static
dynamic
}
class "/if:interfaces/if:interface" as if_interfaces_if_interface << (A,CadetBlue) augment>>
ietf_ip *--  if_interfaces_if_interface 
class "ipv4" as  ietf_interfaces_I_interfaces_I_interface_I_ipv4 <<container>> 
if_interfaces_if_interface *-- "0..1" ietf_interfaces_I_interfaces_I_interface_I_ipv4 
note bottom of ietf_interfaces_I_interfaces_I_interface_I_ipv4
<b>Presence: </b>Enables IPv4 unless the 'enabled' leaf
(which defaults to 'true') is set to 'false'
end note 
ietf_interfaces_I_interfaces_I_interface_I_ipv4 : enabled : boolean   = true 
ietf_interfaces_I_interfaces_I_interface_I_ipv4 : forwarding : boolean   = false 
ietf_interfaces_I_interfaces_I_interface_I_ipv4 : mtu : uint16 [68..max]   {octets}
class "address" as ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address << (L, #FF7700) list>> 
ietf_interfaces_I_interfaces_I_interface_I_ipv4 *-- "0..N" ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address 
ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address : +ip : inet:ipv4-address-no-zone  {key} 
class "subnet" as ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet <<choice>> 
ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address .. ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet : choice 
class "prefix-length" as ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet_I_prefix_length_case <<case>> 
ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet .. ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet_I_prefix_length_case : choice subnet
ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet_I_prefix_length_case : prefix-length : uint8 [0..32]  
class "netmask" as ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet_I_netmask_case <<case>> 
ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet .. ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet_I_netmask_case : choice subnet
ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_address_I_subnet_I_netmask_case : netmask : yang:dotted-quad   {if-feature : ipv4-non-contiguous-netmasks}
class "neighbor" as ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_neighbor << (L, #FF7700) list>> 
ietf_interfaces_I_interfaces_I_interface_I_ipv4 *-- "0..N" ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_neighbor 
ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_neighbor : +ip : inet:ipv4-address-no-zone  {key} 
ietf_interfaces_I_interfaces_I_interface_I_ipv4_I_neighbor : link-layer-address : yang:phys-address   {mandatory}
class "ipv6" as  ietf_interfaces_I_interfaces_I_interface_I_ipv6 <<container>> 
if_interfaces_if_interface *-- "0..1" ietf_interfaces_I_interfaces_I_interface_I_ipv6 
note bottom of ietf_interfaces_I_interfaces_I_interface_I_ipv6
<b>Presence: </b>Enables IPv6 unless the 'enabled' leaf
(which defaults to 'true') is set to 'false'
end note 
ietf_interfaces_I_interfaces_I_interface_I_ipv6 : enabled : boolean   = true 
ietf_interfaces_I_interfaces_I_interface_I_ipv6 : forwarding : boolean   = false 
ietf_interfaces_I_interfaces_I_interface_I_ipv6 : mtu : uint32 [1280..max]   {octets}
class "address" as ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_address << (L, #FF7700) list>> 
ietf_interfaces_I_interfaces_I_interface_I_ipv6 *-- "0..N" ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_address 
ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_address : +ip : inet:ipv6-address-no-zone  {key} 
ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_address : prefix-length : uint8 [0..128]   {mandatory}
class "neighbor" as ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_neighbor << (L, #FF7700) list>> 
ietf_interfaces_I_interfaces_I_interface_I_ipv6 *-- "0..N" ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_neighbor 
ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_neighbor : +ip : inet:ipv6-address-no-zone  {key} 
ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_neighbor : link-layer-address : yang:phys-address   {mandatory}
ietf_interfaces_I_interfaces_I_interface_I_ipv6 : dup-addr-detect-transmits : uint32   = 1 
class "autoconf" as  ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_autoconf <<container>> 
ietf_interfaces_I_interfaces_I_interface_I_ipv6 *-- "1" ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_autoconf 
ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_autoconf : create-global-addresses : boolean   = true 
ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_autoconf : create-temporary-addresses : boolean   = false  {if-feature : ipv6-privacy-autoconf}
ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_autoconf : temporary-valid-lifetime : uint32   = 604800  {seconds} {if-feature : ipv6-privacy-autoconf}
ietf_interfaces_I_interfaces_I_interface_I_ipv6_I_autoconf : temporary-preferred-lifetime : uint32   = 86400  {seconds} {if-feature : ipv6-privacy-autoconf}
class "/if:interfaces-state/if:interface" as if_interfaces_state_if_interface << (A,CadetBlue) augment>>
ietf_ip *--  if_interfaces_state_if_interface 
class "ipv4" as  ietf_interfaces_I_interfaces_state_I_interface_I_ipv4 <<container>> 
if_interfaces_state_if_interface *-- "0..1" ietf_interfaces_I_interfaces_state_I_interface_I_ipv4 
note bottom of ietf_interfaces_I_interfaces_state_I_interface_I_ipv4
<b>Presence: </b>Present if IPv4 is enabled on this interface
end note 
note bottom of ietf_interfaces_I_interfaces_state_I_interface_I_ipv4
<b>Config = </b>false
end note 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4 : forwarding : boolean  
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4 : mtu : uint16 [68..max]   {octets}
class "address" as ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address << (L, #FF7700) list>> 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4 *-- "0..N" ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address : +ip : inet:ipv4-address-no-zone  {key} 
class "subnet" as ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet <<choice>> 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address .. ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet : choice 
class "prefix-length" as ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet_I_prefix_length_case <<case>> 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet .. ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet_I_prefix_length_case : choice subnet
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet_I_prefix_length_case : prefix-length : uint8 [0..32]  
class "netmask" as ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet_I_netmask_case <<case>> 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet .. ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet_I_netmask_case : choice subnet
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address_I_subnet_I_netmask_case : netmask : yang:dotted-quad   {if-feature : ipv4-non-contiguous-netmasks}
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_address : origin : ip-address-origin  
class "neighbor" as ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_neighbor << (L, #FF7700) list>> 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4 *-- "0..N" ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_neighbor 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_neighbor : +ip : inet:ipv4-address-no-zone  {key} 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_neighbor : link-layer-address : yang:phys-address  
ietf_interfaces_I_interfaces_state_I_interface_I_ipv4_I_neighbor : origin : neighbor-origin  
class "ipv6" as  ietf_interfaces_I_interfaces_state_I_interface_I_ipv6 <<container>> 
if_interfaces_state_if_interface *-- "0..1" ietf_interfaces_I_interfaces_state_I_interface_I_ipv6 
note bottom of ietf_interfaces_I_interfaces_state_I_interface_I_ipv6
<b>Presence: </b>Present if IPv6 is enabled on this interface
end note 
note bottom of ietf_interfaces_I_interfaces_state_I_interface_I_ipv6
<b>Config = </b>false
end note 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6 : forwarding : boolean   = false 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6 : mtu : uint32 [1280..max]   {octets}
class "address" as ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_address << (L, #FF7700) list>> 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6 *-- "0..N" ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_address 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_address : +ip : inet:ipv6-address-no-zone  {key} 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_address : prefix-length : uint8 [0..128]   {mandatory}
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_address : origin : ip-address-origin  
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_address : status : enumeration : {preferred,deprecated,invalid,...}  
class "neighbor" as ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_neighbor << (L, #FF7700) list>> 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6 *-- "0..N" ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_neighbor 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_neighbor : +ip : inet:ipv6-address-no-zone  {key} 
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_neighbor : link-layer-address : yang:phys-address  
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_neighbor : origin : neighbor-origin  
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_neighbor : is-router : empty  
ietf_interfaces_I_interfaces_state_I_interface_I_ipv6_I_neighbor : state : enumeration : {incomplete,reachable,stale,...}  
} 

center footer
 <size:20> UML Generated : 2019-02-20 23:22 </size>
 endfooter 
@enduml 
